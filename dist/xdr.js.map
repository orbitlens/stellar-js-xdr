{"version":3,"file":"xdr.js","mappings":"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","sources":["webpack://XDR/webpack/universalModuleDefinition","webpack://XDR/./src/browser.js","webpack://XDR/./src/errors.js","webpack://XDR/./src/serialization/xdr-reader.js","webpack://XDR/./src/serialization/xdr-writer.js","webpack://XDR/./src/xdr-type.js","webpack://XDR/./src/int.js","webpack://XDR/./src/hyper.js","webpack://XDR/./src/unsigned-int.js","webpack://XDR/./src/unsigned-hyper.js","webpack://XDR/./src/float.js","webpack://XDR/./src/double.js","webpack://XDR/./src/quadruple.js","webpack://XDR/./src/bool.js","webpack://XDR/./src/string.js","webpack://XDR/./src/opaque.js","webpack://XDR/./src/var-opaque.js","webpack://XDR/./src/array.js","webpack://XDR/./src/var-array.js","webpack://XDR/./src/option.js","webpack://XDR/./src/void.js","webpack://XDR/./src/enum.js","webpack://XDR/./src/reference.js","webpack://XDR/./src/struct.js","webpack://XDR/./src/union.js","webpack://XDR/./src/config.js","webpack://XDR/./node_modules/base64-js/index.js","webpack://XDR/./node_modules/buffer/index.js","webpack://XDR/./node_modules/ieee754/index.js","webpack://XDR/webpack/bootstrap","webpack://XDR/webpack/runtime/define property getters","webpack://XDR/webpack/runtime/global","webpack://XDR/webpack/runtime/hasOwnProperty shorthand","webpack://XDR/webpack/runtime/make namespace object","webpack://XDR/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"XDR\"] = factory();\n\telse\n\t\troot[\"XDR\"] = factory();\n})(this, () => {\nreturn ","// eslint-disable-next-line prefer-import/prefer-import-over-require\r\nconst exports = require('./index');\r\nmodule.exports = exports;\r\n","export class XdrWriterError extends TypeError {\r\n  constructor(message) {\r\n    super(`XDR Write Error: ${message}`);\r\n  }\r\n}\r\n\r\nexport class XdrReaderError extends TypeError {\r\n  constructor(message) {\r\n    super(`XDR Read Error: ${message}`);\r\n  }\r\n}\r\n\r\nexport class XdrDefinitionError extends TypeError {\r\n  constructor(message) {\r\n    super(`XDR Type Definition Error: ${message}`);\r\n  }\r\n}\r\n\r\nexport class XdrNotImplementedDefinitionError extends XdrDefinitionError {\r\n  constructor() {\r\n    super(`method not implemented, it should be overloaded in the descendant class.`);\r\n  }\r\n}","/**\r\n * @internal\r\n */\r\nimport { XdrReaderError } from '../errors';\r\n\r\nexport class XdrReader {\r\n  /**\r\n   * @constructor\r\n   * @param {Buffer} source - Buffer containing serialized data\r\n   */\r\n  constructor(source) {\r\n    if (!(source instanceof Buffer)) {\r\n      if (source instanceof Array) {\r\n        source = Buffer.from(source)\r\n      } else {\r\n        throw new XdrReaderError('source not specified');\r\n      }\r\n    }\r\n\r\n    this._buffer = source;\r\n    this._length = source.length;\r\n    this._index = 0;\r\n  }\r\n\r\n  /**\r\n   * @type {Buffer}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  _buffer\r\n  /**\r\n   * @type {Number}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  _length\r\n  /**\r\n   * @type {Number}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  _index\r\n\r\n  /**\r\n   * Check if the reader reached the end of the input buffer\r\n   * @return {Boolean}\r\n   */\r\n  get eof() {\r\n    return this._index === this._length;\r\n  }\r\n\r\n  /**\r\n   * Advance reader position, check padding and overflow\r\n   * @param {Number} size - Bytes to read\r\n   * @return {Number} Position to read from\r\n   * @private\r\n   */\r\n  advance(size) {\r\n    const from = this._index;\r\n    // advance cursor position\r\n    this._index += size;\r\n    // check buffer boundaries\r\n    if (this._length < this._index)\r\n      throw new XdrReaderError('attempt to read outside the boundary of the buffer');\r\n    // check that padding is correct for Opaque and String\r\n    const padding = 4 - (size % 4 || 4);\r\n    if (padding > 0) {\r\n      for (let i = 0; i < padding; i++)\r\n        if (this._buffer[this._index + i] !== 0) // all bytes in the padding should be zeros\r\n          throw new XdrReaderError('invalid padding');\r\n      this._index += padding;\r\n    }\r\n    return from;\r\n  }\r\n\r\n  /**\r\n   * Reset reader position\r\n   * @return {void}\r\n   */\r\n  rewind() {\r\n    this._index = 0\r\n  }\r\n\r\n  /**\r\n   * Read byte array from the buffer\r\n   * @param {Number} size - Bytes to read\r\n   * @return {Buffer} - Sliced portion of the underlying buffer\r\n   */\r\n  read(size) {\r\n    const from = this.advance(size);\r\n    return this._buffer.subarray(from, from + size);\r\n  }\r\n\r\n  /**\r\n   * Read i32 from buffer\r\n   * @return {Number}\r\n   */\r\n  readInt32BE() {\r\n    return this._buffer.readInt32BE(this.advance(4));\r\n  }\r\n\r\n  /**\r\n   * Read u32 from buffer\r\n   * @return {Number}\r\n   */\r\n  readUInt32BE() {\r\n    return this._buffer.readUInt32BE(this.advance(4));\r\n  }\r\n\r\n  /**\r\n   * Read i64 from buffer\r\n   * @return {BigInt}\r\n   */\r\n  readBigInt64BE() {\r\n    return this._buffer.readBigInt64BE(this.advance(8));\r\n  }\r\n\r\n  /**\r\n   * Read u64 from buffer\r\n   * @return {BigInt}\r\n   */\r\n  readBigUInt64BE() {\r\n    return this._buffer.readBigUInt64BE(this.advance(8));\r\n  }\r\n\r\n  /**\r\n   * Read float from buffer\r\n   * @return {Number}\r\n   */\r\n  readFloatBE() {\r\n    return this._buffer.readFloatBE(this.advance(4));\r\n  }\r\n\r\n  /**\r\n   * Read double from buffer\r\n   * @return {Number}\r\n   */\r\n  readDoubleBE() {\r\n    return this._buffer.readDoubleBE(this.advance(8));\r\n  }\r\n\r\n  /**\r\n   * Ensure that input buffer has been consumed in full, otherwise it's a type mismatch\r\n   * @return {void}\r\n   * @throws {XdrReaderError}\r\n   */\r\n  ensureInputConsumed() {\r\n    if (this._index !== this._length)\r\n      throw new XdrReaderError(`invalid XDR contract typecast - source buffer not entirely consumed`);\r\n  }\r\n}\r\n","const BUFFER_CHUNK = 8192; // 8 KB chunk size increment\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class XdrWriter {\r\n  /**\r\n   * @param {Buffer|Number} [buffer] - Optional destination buffer\r\n   */\r\n  constructor(buffer) {\r\n    if (typeof buffer === 'number') {\r\n      buffer = Buffer.allocUnsafe(buffer);\r\n    } else if (!(buffer instanceof Buffer)) {\r\n      buffer = Buffer.allocUnsafe(BUFFER_CHUNK);\r\n    }\r\n    this._buffer = buffer;\r\n    this._length = buffer.length;\r\n  }\r\n\r\n  /**\r\n   * @type {Buffer}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  _buffer\r\n  /**\r\n   * @type {Number}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  _length\r\n  /**\r\n   * @type {Number}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  _index = 0\r\n\r\n  /**\r\n   * Advance writer position, write padding if needed, auto-resize the buffer\r\n   * @param {Number} size - Bytes to write\r\n   * @return {Number} Position to read from\r\n   * @private\r\n   */\r\n  alloc(size) {\r\n    const from = this._index;\r\n    // advance cursor position\r\n    this._index += size;\r\n    // ensure sufficient buffer size\r\n    if (this._length < this._index) {\r\n      this.resize(this._index)\r\n    }\r\n    return from;\r\n  }\r\n\r\n  /**\r\n   * Increase size of the underlying buffer\r\n   * @param {Number} minRequiredSize - Minimum required buffer size\r\n   * @return {void}\r\n   * @private\r\n   */\r\n  resize(minRequiredSize) {\r\n    // calculate new length, align new buffer length by chunk size\r\n    const newLength = Math.ceil(minRequiredSize / BUFFER_CHUNK) * BUFFER_CHUNK;\r\n    // create new buffer and copy previous data\r\n    const newBuffer = Buffer.allocUnsafe(newLength)\r\n    this._buffer.copy(newBuffer, 0, 0, this._length)\r\n    // update references\r\n    this._buffer = newBuffer\r\n    this._length = newLength\r\n  }\r\n\r\n  /**\r\n   * Return XDR-serialized value\r\n   * @return {Buffer}\r\n   */\r\n  finalize() {\r\n    // clip underlying buffer to the actually written value\r\n    return this._buffer.subarray(0, this._index)\r\n  }\r\n\r\n  /**\r\n   * Return XDR-serialized value as byte array\r\n   * @return {Number[]}\r\n   */\r\n  toArray() {\r\n    return [...this.finalize()]\r\n  }\r\n\r\n  /**\r\n   * Write byte array from the buffer\r\n   * @param {Buffer|String} value - Bytes/string to write\r\n   * @param {Number} size - Size in bytes\r\n   * @return {XdrReader} - XdrReader wrapper on top of a subarray\r\n   */\r\n  write(value, size) {\r\n    if (typeof value === 'string') {\r\n      // serialize string directly to the output buffer\r\n      const offset = this.alloc(size);\r\n      this._buffer.write(value, offset, 'utf8');\r\n    } else {\r\n      // copy data to the output buffer\r\n      if (!(value instanceof Buffer)) {\r\n        value = Buffer.from(value);\r\n      }\r\n      const offset = this.alloc(size);\r\n      value.copy(this._buffer, offset, 0, size);\r\n    }\r\n\r\n    // add padding for 4-byte XDR alignment\r\n    const padding = 4 - (size % 4 || 4);\r\n    if (padding > 0) {\r\n      const offset = this.alloc(padding);\r\n      this._buffer.fill(0, offset, this._index);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Write i32 from buffer\r\n   * @param {Number} value - Value to serialize\r\n   * @return {void}\r\n   */\r\n  writeInt32BE(value) {\r\n    const offset = this.alloc(4);\r\n    this._buffer.writeInt32BE(value, offset);\r\n  }\r\n\r\n  /**\r\n   * Write u32 from buffer\r\n   * @param {Number} value - Value to serialize\r\n   * @return {void}\r\n   */\r\n  writeUInt32BE(value) {\r\n    const offset = this.alloc(4);\r\n    this._buffer.writeUInt32BE(value, offset);\r\n  }\r\n\r\n  /**\r\n   * Write i64 from buffer\r\n   * @param {BigInt} value - Value to serialize\r\n   * @return {void}\r\n   */\r\n  writeBigInt64BE(value) {\r\n    const offset = this.alloc(8);\r\n    this._buffer.writeBigInt64BE(value, offset);\r\n  }\r\n\r\n  /**\r\n   * Write u64 from buffer\r\n   * @param {BigInt} value - Value to serialize\r\n   * @return {void}\r\n   */\r\n  writeBigUInt64BE(value) {\r\n    const offset = this.alloc(8);\r\n    this._buffer.writeBigUInt64BE(value, offset);\r\n\r\n  }\r\n\r\n  /**\r\n   * Write float from buffer\r\n   * @param {Number} value - Value to serialize\r\n   * @return {void}\r\n   */\r\n  writeFloatBE(value) {\r\n    const offset = this.alloc(4);\r\n    this._buffer.writeFloatBE(value, offset);\r\n  }\r\n\r\n  /**\r\n   * Write double from buffer\r\n   * @param {Number} value - Value to serialize\r\n   * @return {void}\r\n   */\r\n  writeDoubleBE(value) {\r\n    const offset = this.alloc(8);\r\n    this._buffer.writeDoubleBE(value, offset);\r\n  }\r\n\r\n  static bufferChunkSize = BUFFER_CHUNK;\r\n}","import { XdrReader } from './serialization/xdr-reader';\r\nimport { XdrWriter } from './serialization/xdr-writer';\r\nimport { XdrNotImplementedDefinitionError } from './errors';\r\n\r\nclass XdrType {\r\n\r\n  /**\r\n   * Encode value to XDR format\r\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\r\n   * @return {String|Buffer}\r\n   */\r\n  toXDR(format = 'raw') {\r\n    if (!this.write)\r\n      return this.constructor.toXDR(this, format);\r\n\r\n    const writer = new XdrWriter();\r\n    this.write(this, writer);\r\n    return encodeResult(writer.finalize(), format);\r\n  }\r\n\r\n  /**\r\n   * Decode XDR-encoded value\r\n   * @param {Buffer|String} input - XDR-encoded input data\r\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\r\n   * @return {XdrType}\r\n   */\r\n  fromXDR(input, format = 'raw') {\r\n    if (!this.read)\r\n      return this.constructor.fromXDR(input, format);\r\n\r\n    const reader = new XdrReader(decodeInput(input, format));\r\n    const result = this.read(reader);\r\n    reader.ensureInputConsumed();\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Check whether input contains a valid XDR-encoded value\r\n   * @param {Buffer|String} input - XDR-encoded input data\r\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\r\n   * @return {Boolean}\r\n   */\r\n  validateXDR(input, format = 'raw') {\r\n    try {\r\n      this.fromXDR(input, format);\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Encode value to XDR format\r\n   * @param {XdrPrimitiveType} value - Value to serialize\r\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\r\n   * @return {Buffer}\r\n   */\r\n  static toXDR(value, format = 'raw') {\r\n    const writer = new XdrWriter();\r\n    this.write(value, writer);\r\n    return encodeResult(writer.finalize(), format);\r\n  }\r\n\r\n  /**\r\n   * Decode XDR-encoded value\r\n   * @param {Buffer|String} input - XDR-encoded input data\r\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\r\n   * @return {XdrType}\r\n   */\r\n  static fromXDR(input, format = 'raw') {\r\n    const reader = new XdrReader(decodeInput(input, format));\r\n    const result = this.read(reader);\r\n    reader.ensureInputConsumed();\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Check whether input contains a valid XDR-encoded value\r\n   * @param {Buffer|String} input - XDR-encoded input data\r\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\r\n   * @return {Boolean}\r\n   */\r\n  static validateXDR(input, format = 'raw') {\r\n    try {\r\n      this.fromXDR(input, format);\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport class XdrPrimitiveType extends XdrType {\r\n  /**\r\n   * Read value from the XDR-serialized input\r\n   * @param {XdrReader} reader - XdrReader instance\r\n   * @return {*}\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  static read(reader) {\r\n    throw new XdrNotImplementedDefinitionError()\r\n  }\r\n\r\n  /**\r\n   * Write XDR value to the buffer\r\n   * @param {*} value - Value to write\r\n   * @param {XdrWriter} writer - XdrWriter instance\r\n   * @return {void}\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  static write(value, writer) {\r\n    throw new XdrNotImplementedDefinitionError()\r\n  }\r\n\r\n  /**\r\n   * Check whether XDR primitive value is valid\r\n   * @param {XdrType} value - Value to check\r\n   * @return {Boolean}\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  static isValid(value) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport class XdrCompositeType extends XdrType {\r\n  // Every descendant should implement two methods: read(reader) and write(value, writer)\r\n\r\n  /**\r\n   * Check whether XDR primitive value is valid\r\n   * @param {XdrType} value - Value to check\r\n   * @return {Boolean}\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  isValid(value) {\r\n    return false;\r\n  }\r\n}\r\n\r\nclass InvalidXdrEncodingFormatError extends TypeError {\r\n  constructor(format) {\r\n    super(`Invalid format ${format}, must be one of \"raw\", \"hex\", \"base64\"`);\r\n  }\r\n}\r\n\r\nfunction encodeResult(buffer, format) {\r\n  switch (format) {\r\n    case 'raw':\r\n      return buffer;\r\n    case 'hex':\r\n      return buffer.toString('hex');\r\n    case 'base64':\r\n      return buffer.toString('base64');\r\n    default:\r\n      throw new InvalidXdrEncodingFormatError(format);\r\n  }\r\n}\r\n\r\nfunction decodeInput(input, format) {\r\n  switch (format) {\r\n    case 'raw':\r\n      return input;\r\n    case 'hex':\r\n      return Buffer.from(input, 'hex');\r\n    case 'base64':\r\n      return Buffer.from(input, 'base64');\r\n    default:\r\n      throw new InvalidXdrEncodingFormatError(format);\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {'raw'|'hex'|'base64'} XdrEncodingFormat\r\n */\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nconst MAX_VALUE = 2147483647;\r\nconst MIN_VALUE = -2147483648;\r\n\r\nexport class Int extends XdrPrimitiveType {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    return reader.readInt32BE();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (typeof value !== 'number')\r\n      throw new XdrWriterError('not a number');\r\n\r\n    if ((value | 0) !== value)\r\n      throw new XdrWriterError('invalid i32 value');\r\n\r\n    writer.writeInt32BE(value);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    if (typeof value !== 'number' || (value | 0) !== value) {\r\n      return false;\r\n    }\r\n\r\n    return value >= MIN_VALUE && value <= MAX_VALUE;\r\n  }\r\n}\r\n\r\nInt.MAX_VALUE = MAX_VALUE;\r\nInt.MIN_VALUE = -MIN_VALUE;\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nconst MIN_VALUE = -9223372036854775808n;\r\nconst MAX_VALUE = 9223372036854775807n;\r\n\r\nexport class Hyper extends XdrPrimitiveType {\r\n  constructor(low, high) {\r\n    super();\r\n    if (typeof low === 'bigint') {\r\n      if (low < MIN_VALUE || low > MAX_VALUE)\r\n        throw new TypeError('Invalid i64 value');\r\n      this._value = low;\r\n    } else {\r\n      if ((low | 0) !== low || (high | 0) !== high)\r\n        throw new TypeError('Invalid i64 value');\r\n      this._value = (BigInt(high >>> 0) << 32n) | BigInt(low >>> 0);\r\n    }\r\n  }\r\n\r\n  get low() {\r\n    return Number(this._value & 0xFFFFFFFFn) << 0;\r\n  }\r\n\r\n  get high() {\r\n    return Number(this._value >> 32n) >> 0;\r\n  }\r\n\r\n  get unsigned() {\r\n    return false;\r\n  }\r\n\r\n  toString() {\r\n    return this._value.toString();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    return new Hyper(reader.readBigInt64BE());\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (!(value instanceof this))\r\n      throw new XdrWriterError(`${value} is not a Hyper`);\r\n    writer.writeBigInt64BE(value._value);\r\n  }\r\n\r\n  /**\r\n   * Create Hyper instance from string\r\n   * @param {String} string - Numeric representation\r\n   * @return {Hyper}\r\n   */\r\n  static fromString(string) {\r\n    if (!/^-?\\d{0,19}$/.test(string))\r\n      throw new TypeError(`Invalid i64 string value: ${string}`);\r\n    return new Hyper(BigInt(string));\r\n  }\r\n\r\n  /**\r\n   * Create Hyper from two [high][low] i32 values\r\n   * @param {Number} low - Low part of i64 number\r\n   * @param {Number} high - High part of i64 number\r\n   * @return {Hyper}\r\n   */\r\n  static fromBits(low, high) {\r\n    return new this(low, high);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return value instanceof this;\r\n  }\r\n}\r\n\r\nHyper.MAX_VALUE = new Hyper(MAX_VALUE);\r\nHyper.MIN_VALUE = new Hyper(MIN_VALUE);\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nconst MAX_VALUE = 4294967295;\r\nconst MIN_VALUE = 0;\r\n\r\nexport class UnsignedInt extends XdrPrimitiveType {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    return reader.readUInt32BE();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (typeof value !== 'number' || !(value >= MIN_VALUE && value <= MAX_VALUE) || value % 1 !== 0)\r\n      throw new XdrWriterError('invalid u32 value');\r\n\r\n    writer.writeUInt32BE(value);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    if (typeof value !== 'number' || value % 1 !== 0) {\r\n      return false;\r\n    }\r\n\r\n    return value >= MIN_VALUE && value <= MAX_VALUE;\r\n  }\r\n}\r\n\r\nUnsignedInt.MAX_VALUE = MAX_VALUE;\r\nUnsignedInt.MIN_VALUE = MIN_VALUE;\r\n","import {XdrPrimitiveType} from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nconst MIN_VALUE = 0n;\r\nconst MAX_VALUE = 0xFFFFFFFFFFFFFFFFn;\r\n\r\nexport class UnsignedHyper extends XdrPrimitiveType {\r\n  constructor(low, high) {\r\n    super();\r\n    if (typeof low === 'bigint') {\r\n      if (low < MIN_VALUE || low > MAX_VALUE)\r\n        throw new TypeError('Invalid u64 value');\r\n      this._value = low;\r\n    } else {\r\n      if ((low | 0) !== low || (high | 0) !== high)\r\n        throw new TypeError('Invalid u64 value');\r\n      this._value = (BigInt(high >>> 0) << 32n) | BigInt(low >>> 0);\r\n    }\r\n  }\r\n\r\n  get low() {\r\n    return Number(this._value & 0xFFFFFFFFn) << 0;\r\n  }\r\n\r\n  get high() {\r\n    return Number(this._value >> 32n) >> 0;\r\n  }\r\n\r\n  get unsigned() {\r\n    return true;\r\n  }\r\n\r\n  toString() {\r\n    return this._value.toString();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    return new UnsignedHyper(reader.readBigUInt64BE());\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (!(value instanceof this))\r\n      throw new XdrWriterError(`${value} is not an UnsignedHyper`);\r\n    writer.writeBigUInt64BE(value._value);\r\n  }\r\n\r\n  /**\r\n   * Create UnsignedHyper instance from string\r\n   * @param {String} string - Numeric representation\r\n   * @return {UnsignedHyper}\r\n   */\r\n  static fromString(string) {\r\n    if (!/^\\d{0,20}$/.test(string))\r\n      throw new TypeError(`Invalid u64 string value: ${string}`);\r\n    return new UnsignedHyper(BigInt(string));\r\n  }\r\n\r\n  /**\r\n   * Create UnsignedHyper from two [high][low] i32 values\r\n   * @param {Number} low - Low part of u64 number\r\n   * @param {Number} high - High part of u64 number\r\n   * @return {UnsignedHyper}\r\n   */\r\n  static fromBits(low, high) {\r\n    return new this(low, high);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return value instanceof this;\r\n  }\r\n}\r\n\r\nUnsignedHyper.MAX_VALUE = new UnsignedHyper(MAX_VALUE);\r\nUnsignedHyper.MIN_VALUE = new UnsignedHyper(MIN_VALUE);\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Float extends XdrPrimitiveType {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    return reader.readFloatBE();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (typeof value !== 'number')\r\n      throw new XdrWriterError('not a number');\r\n\r\n    writer.writeFloatBE(value);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return typeof value === 'number';\r\n  }\r\n}\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Double extends XdrPrimitiveType {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    return reader.readDoubleBE();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (typeof value !== 'number')\r\n      throw new XdrWriterError('not a number');\r\n\r\n    writer.writeDoubleBE(value);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return typeof value === 'number';\r\n  }\r\n}\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrDefinitionError } from './errors';\r\n\r\nexport class Quadruple extends XdrPrimitiveType {\r\n  static read() {\r\n    throw new XdrDefinitionError('quadruple not supported');\r\n  }\r\n\r\n  static write() {\r\n    throw new XdrDefinitionError('quadruple not supported');\r\n  }\r\n\r\n  static isValid() {\r\n    return false;\r\n  }\r\n}\r\n","import { Int } from './int';\r\nimport { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrReaderError } from './errors';\r\n\r\nexport class Bool extends XdrPrimitiveType {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    const value = Int.read(reader);\r\n\r\n    switch (value) {\r\n      case 0:\r\n        return false;\r\n      case 1:\r\n        return true;\r\n      default:\r\n        throw new XdrReaderError(`got ${value} when trying to read a bool`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    const intVal = value ? 1 : 0;\r\n    Int.write(intVal, writer);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return typeof value === 'boolean';\r\n  }\r\n}","import { UnsignedInt } from './unsigned-int';\r\nimport { XdrCompositeType } from './xdr-type';\r\nimport { XdrReaderError, XdrWriterError } from './errors';\r\n\r\nexport class String extends XdrCompositeType {\r\n  constructor(maxLength = UnsignedInt.MAX_VALUE) {\r\n    super();\r\n    this._maxLength = maxLength;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  read(reader) {\r\n    const size = UnsignedInt.read(reader);\r\n    if (size > this._maxLength)\r\n      throw new XdrReaderError(`saw ${size} length String, max allowed is ${this._maxLength}`);\r\n\r\n    return reader.read(size);\r\n  }\r\n\r\n  readString(reader) {\r\n    return this.read(reader).toString('utf8');\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  write(value, writer) {\r\n    // calculate string byte size before writing\r\n    const size = typeof value === 'string'?\r\n      Buffer.byteLength(value, 'utf8'):\r\n      value.length;\r\n    if (size > this._maxLength)\r\n      throw new XdrWriterError(`got ${value.length} bytes, max allowed is ${this._maxLength}`);\r\n    // write size info\r\n    UnsignedInt.write(size, writer);\r\n    writer.write(value, size);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isValid(value) {\r\n    if (typeof value === 'string') {\r\n      return Buffer.byteLength(value, 'utf8') <= this._maxLength;\r\n    }\r\n    if (value instanceof Array || Buffer.isBuffer(value)) {\r\n      return value.length <= this._maxLength;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { XdrCompositeType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Opaque extends XdrCompositeType {\r\n  constructor(length) {\r\n    super();\r\n    this._length = length;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  read(reader) {\r\n    return reader.read(this._length);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  write(value, writer) {\r\n    const {length} = value;\r\n    if (length !== this._length)\r\n      throw new XdrWriterError(`got ${value.length} bytes, expected ${this._length}`);\r\n    writer.write(value, length);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isValid(value) {\r\n    return Buffer.isBuffer(value) && value.length === this._length;\r\n  }\r\n}\r\n","import { UnsignedInt } from './unsigned-int';\r\nimport { XdrCompositeType } from './xdr-type';\r\nimport { XdrReaderError, XdrWriterError } from './errors';\r\n\r\nexport class VarOpaque extends XdrCompositeType {\r\n  constructor(maxLength = UnsignedInt.MAX_VALUE) {\r\n    super();\r\n    this._maxLength = maxLength;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  read(reader) {\r\n    const size = UnsignedInt.read(reader);\r\n    if (size > this._maxLength)\r\n      throw new XdrReaderError(`saw ${size} length VarOpaque, max allowed is ${this._maxLength}`);\r\n    return reader.read(size);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  write(value, writer) {\r\n    const {length} = value;\r\n    if (value.length > this._maxLength)\r\n      throw new XdrWriterError(`got ${value.length} bytes, max allowed is ${this._maxLength}`);\r\n    // write size info\r\n    UnsignedInt.write(length, writer);\r\n    writer.write(value, length);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isValid(value) {\r\n    return Buffer.isBuffer(value) && value.length <= this._maxLength;\r\n  }\r\n}\r\n","import { XdrCompositeType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Array extends XdrCompositeType {\r\n  constructor(childType, length) {\r\n    super();\r\n    this._childType = childType;\r\n    this._length = length;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  read(reader) {\r\n    // allocate array of specified length\r\n    const result = new global.Array(this._length);\r\n    // read values\r\n    for (let i = 0; i < this._length; i++) {\r\n      result[i] = this._childType.read(reader);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  write(value, writer) {\r\n    if (!(value instanceof global.Array))\r\n      throw new XdrWriterError(`value is not array`);\r\n\r\n    if (value.length !== this._length)\r\n      throw new XdrWriterError(`got array of size ${value.length}, expected ${this._length}`);\r\n\r\n    for (const child of value) {\r\n      this._childType.write(child, writer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isValid(value) {\r\n    if (!(value instanceof global.Array) || value.length !== this._length) {\r\n      return false;\r\n    }\r\n\r\n    for (const child of value) {\r\n      if (!this._childType.isValid(child))\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { UnsignedInt } from './unsigned-int';\r\nimport { XdrCompositeType } from './xdr-type';\r\nimport { XdrReaderError, XdrWriterError } from './errors';\r\n\r\nexport class VarArray extends XdrCompositeType {\r\n  constructor(childType, maxLength = UnsignedInt.MAX_VALUE) {\r\n    super();\r\n    this._childType = childType;\r\n    this._maxLength = maxLength;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  read(reader) {\r\n    const length = UnsignedInt.read(reader);\r\n    if (length > this._maxLength)\r\n      throw new XdrReaderError(`saw ${length} length VarArray, max allowed is ${this._maxLength}`);\r\n\r\n    const result = new Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n      result[i] = this._childType.read(reader);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  write(value, writer) {\r\n    if (!(value instanceof Array))\r\n      throw new XdrWriterError(`value is not array`);\r\n\r\n    if (value.length > this._maxLength)\r\n      throw new XdrWriterError(`got array of size ${value.length}, max allowed is ${this._maxLength}`);\r\n\r\n    UnsignedInt.write(value.length, writer);\r\n    for (const child of value) {\r\n      this._childType.write(child, writer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isValid(value) {\r\n    if (!(value instanceof Array) || value.length > this._maxLength) {\r\n      return false;\r\n    }\r\n    for (const child of value) {\r\n      if (!this._childType.isValid(child))\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Bool } from './bool';\r\nimport { XdrPrimitiveType } from './xdr-type';\r\n\r\nexport class Option extends XdrPrimitiveType {\r\n  constructor(childType) {\r\n    super();\r\n    this._childType = childType;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  read(reader) {\r\n    if (Bool.read(reader)) {\r\n      return this._childType.read(reader);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  write(value, writer) {\r\n    const isPresent = value !== null && value !== undefined;\r\n\r\n    Bool.write(isPresent, writer);\r\n\r\n    if (isPresent) {\r\n      this._childType.write(value, writer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isValid(value) {\r\n    if (value === null || value === undefined) {\r\n      return true;\r\n    }\r\n    return this._childType.isValid(value);\r\n  }\r\n}","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Void extends XdrPrimitiveType {\r\n  /* jshint unused: false */\r\n\r\n  static read() {\r\n    return undefined;\r\n  }\r\n\r\n  static write(value) {\r\n    if (value !== undefined)\r\n      throw new XdrWriterError('trying to write value to a void slot');\r\n  }\r\n\r\n  static isValid(value) {\r\n    return value === undefined;\r\n  }\r\n}\r\n","import { Int } from './int';\r\nimport { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrReaderError, XdrWriterError } from './errors';\r\n\r\nexport class Enum extends XdrPrimitiveType {\r\n  constructor(name, value) {\r\n    super();\r\n    this.name = name;\r\n    this.value = value;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    const intVal = Int.read(reader);\r\n    const res = this._byValue[intVal];\r\n    if (res === undefined)\r\n      throw new XdrReaderError(`unknown ${this.enumName} member for value ${intVal}`);\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (!(value instanceof this))\r\n      throw new XdrWriterError(`unknown ${value} is not a ${this.enumName}`);\r\n\r\n    Int.write(value.value, writer);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return value instanceof this;\r\n  }\r\n\r\n  static members() {\r\n    return this._members;\r\n  }\r\n\r\n  static values() {\r\n    return Object.values(this._members);\r\n  }\r\n\r\n  static fromName(name) {\r\n    const result = this._members[name];\r\n\r\n    if (!result)\r\n      throw new TypeError(`${name} is not a member of ${this.enumName}`);\r\n\r\n    return result;\r\n  }\r\n\r\n  static fromValue(value) {\r\n    const result = this._byValue[value];\r\n    if (result === undefined)\r\n      throw new TypeError(`${value} is not a value of any member of ${this.enumName}`);\r\n     return result;\r\n  }\r\n\r\n  static create(context, name, members) {\r\n    const ChildEnum = class extends Enum {\r\n    };\r\n\r\n    ChildEnum.enumName = name;\r\n    context.results[name] = ChildEnum;\r\n\r\n    ChildEnum._members = {};\r\n    ChildEnum._byValue = {};\r\n\r\n    for (const [key, value] of Object.entries(members)) {\r\n      const inst = new ChildEnum(key, value);\r\n      ChildEnum._members[key] = inst;\r\n      ChildEnum._byValue[value] = inst;\r\n      ChildEnum[key] = () => inst;\r\n    }\r\n\r\n    return ChildEnum;\r\n  }\r\n}","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrDefinitionError } from './errors';\r\n\r\nexport class Reference extends XdrPrimitiveType {\r\n  /* jshint unused: false */\r\n  resolve() {\r\n    throw new XdrDefinitionError('\"resolve\" method should be implemented in the descendant class');\r\n  }\r\n}\r\n","import { Reference } from './reference';\r\nimport { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Struct extends XdrPrimitiveType {\r\n  constructor(attributes) {\r\n    super();\r\n    this._attributes = attributes || {};\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    const attributes = {};\r\n    for (const [fieldName, type] of this._fields) {\r\n      attributes[fieldName] = type.read(reader);\r\n    }\r\n    return new this(attributes);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (!(value instanceof this))\r\n      throw new XdrWriterError(`${value} is not a ${this.structName}`);\r\n\r\n    for (const [fieldName, type] of this._fields) {\r\n      const attribute = value._attributes[fieldName];\r\n      type.write(attribute, writer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return value instanceof this;\r\n  }\r\n\r\n  static create(context, name, fields) {\r\n    const ChildStruct = class extends Struct {\r\n    };\r\n\r\n    ChildStruct.structName = name;\r\n\r\n    context.results[name] = ChildStruct;\r\n\r\n    const mappedFields = new Array(fields.length);\r\n    for (let i = 0; i < fields.length; i++) {\r\n      const fieldDescriptor = fields[i];\r\n      const fieldName = fieldDescriptor[0];\r\n      let field = fieldDescriptor[1];\r\n      if (field instanceof Reference) {\r\n        field = field.resolve(context);\r\n      }\r\n      mappedFields[i] = [fieldName, field];\r\n      // create accessors\r\n      ChildStruct.prototype[fieldName] = createAccessorMethod(fieldName);\r\n    }\r\n\r\n    ChildStruct._fields = mappedFields;\r\n\r\n    return ChildStruct;\r\n  }\r\n}\r\n\r\nfunction createAccessorMethod(name) {\r\n  return function readOrWriteAttribute(value) {\r\n    if (value !== undefined) {\r\n      this._attributes[name] = value;\r\n    }\r\n    return this._attributes[name];\r\n  };\r\n}\r\n","import { Void } from './void';\r\nimport { Reference } from './reference';\r\nimport { XdrCompositeType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Union extends XdrCompositeType {\r\n  constructor(aSwitch, value) {\r\n    super();\r\n    this.set(aSwitch, value);\r\n  }\r\n\r\n  set(aSwitch, value) {\r\n    if (typeof aSwitch === 'string') {\r\n      aSwitch = this.constructor._switchOn.fromName(aSwitch);\r\n    }\r\n\r\n    this._switch = aSwitch;\r\n    const arm = this.constructor.armForSwitch(this._switch);\r\n    this._arm = arm;\r\n    this._armType = arm === Void ? Void : this.constructor._arms[arm];\r\n    this._value = value;\r\n  }\r\n\r\n  get(armName = this._arm) {\r\n    if (this._arm !== Void && this._arm !== armName)\r\n      throw new TypeError(`${armName} not set`);\r\n    return this._value;\r\n  }\r\n\r\n  switch() {\r\n    return this._switch;\r\n  }\r\n\r\n  arm() {\r\n    return this._arm;\r\n  }\r\n\r\n  armType() {\r\n    return this._armType;\r\n  }\r\n\r\n  value() {\r\n    return this._value;\r\n  }\r\n\r\n  static armForSwitch(aSwitch) {\r\n    const member = this._switches.get(aSwitch);\r\n    if (member !== undefined) {\r\n      return member;\r\n    }\r\n    if (this._defaultArm) {\r\n      return this._defaultArm;\r\n    }\r\n    throw new TypeError(`Bad union switch: ${aSwitch}`);\r\n  }\r\n\r\n  static armTypeForArm(arm) {\r\n    if (arm === Void) {\r\n      return Void;\r\n    }\r\n    return this._arms[arm];\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    const aSwitch = this._switchOn.read(reader);\r\n    const arm = this.armForSwitch(aSwitch);\r\n    const armType = arm === Void ? Void : this._arms[arm];\r\n    let value;\r\n    if (armType !== undefined) {\r\n      value = armType.read(reader);\r\n    } else {\r\n      value = arm.read(reader);\r\n    }\r\n    return new this(aSwitch, value);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (!(value instanceof this))\r\n      throw new XdrWriterError(`${value} is not a ${this.unionName}`);\r\n\r\n    this._switchOn.write(value.switch(), writer);\r\n    value.armType().write(value.value(), writer);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return value instanceof this;\r\n  }\r\n\r\n  static create(context, name, config) {\r\n    const ChildUnion = class extends Union {\r\n    };\r\n\r\n    ChildUnion.unionName = name;\r\n    context.results[name] = ChildUnion;\r\n\r\n    if (config.switchOn instanceof Reference) {\r\n      ChildUnion._switchOn = config.switchOn.resolve(context);\r\n    } else {\r\n      ChildUnion._switchOn = config.switchOn;\r\n    }\r\n\r\n    ChildUnion._switches = new Map();\r\n    ChildUnion._arms = {};\r\n\r\n    // resolve default arm\r\n    let defaultArm = config.defaultArm;\r\n    if (defaultArm instanceof Reference) {\r\n      defaultArm = defaultArm.resolve(context);\r\n    }\r\n\r\n    ChildUnion._defaultArm = defaultArm;\r\n\r\n    for (const [aSwitch, armName] of config.switches) {\r\n      const key = typeof aSwitch === 'string' ?\r\n        ChildUnion._switchOn.fromName(aSwitch) :\r\n        aSwitch;\r\n\r\n      ChildUnion._switches.set(key, armName);\r\n    }\r\n\r\n    // add enum-based helpers\r\n    // NOTE: we don't have good notation for \"is a subclass of XDR.Enum\",\r\n    //  and so we use the following check (does _switchOn have a `values`\r\n    //  attribute) to approximate the intent.\r\n    if (ChildUnion._switchOn.values !== undefined) {\r\n      for (const aSwitch of ChildUnion._switchOn.values()) {\r\n        // Add enum-based constructors\r\n        ChildUnion[aSwitch.name] = function ctr(value) {\r\n          return new ChildUnion(aSwitch, value);\r\n        };\r\n\r\n        // Add enum-based \"set\" helpers\r\n        ChildUnion.prototype[aSwitch.name] = function set(value) {\r\n          return this.set(aSwitch, value);\r\n        };\r\n      }\r\n    }\r\n\r\n    if (config.arms) {\r\n      for (const [armsName, value] of Object.entries(config.arms)) {\r\n        ChildUnion._arms[armsName] = (value instanceof Reference) ?\r\n          value.resolve(context) :\r\n          value;\r\n        // Add arm accessor helpers\r\n        if (value !== Void) {\r\n          ChildUnion.prototype[armsName] = function get() {\r\n            return this.get(armsName);\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    return ChildUnion;\r\n  }\r\n}\r\n","// eslint-disable-next-line max-classes-per-file\r\nimport * as XDRTypes from './types';\r\nimport { Reference } from './reference';\r\nimport { XdrDefinitionError } from './errors';\r\n\r\nexport * from './reference';\r\n\r\nclass SimpleReference extends Reference {\r\n  constructor(name) {\r\n    super();\r\n    this.name = name;\r\n  }\r\n\r\n  resolve(context) {\r\n    const defn = context.definitions[this.name];\r\n    return defn.resolve(context);\r\n  }\r\n}\r\n\r\nclass ArrayReference extends Reference {\r\n  constructor(childReference, length, variable = false) {\r\n    super();\r\n    this.childReference = childReference;\r\n    this.length = length;\r\n    this.variable = variable;\r\n  }\r\n\r\n  resolve(context) {\r\n    let resolvedChild = this.childReference;\r\n    let length = this.length;\r\n\r\n    if (resolvedChild instanceof Reference) {\r\n      resolvedChild = resolvedChild.resolve(context);\r\n    }\r\n\r\n    if (length instanceof Reference) {\r\n      length = length.resolve(context);\r\n    }\r\n\r\n    if (this.variable) {\r\n      return new XDRTypes.VarArray(resolvedChild, length);\r\n    }\r\n    return new XDRTypes.Array(resolvedChild, length);\r\n  }\r\n}\r\n\r\nclass OptionReference extends Reference {\r\n  constructor(childReference) {\r\n    super();\r\n    this.childReference = childReference;\r\n    this.name = childReference.name;\r\n  }\r\n\r\n  resolve(context) {\r\n    let resolvedChild = this.childReference;\r\n\r\n    if (resolvedChild instanceof Reference) {\r\n      resolvedChild = resolvedChild.resolve(context);\r\n    }\r\n\r\n    return new XDRTypes.Option(resolvedChild);\r\n  }\r\n}\r\n\r\nclass SizedReference extends Reference {\r\n  constructor(sizedType, length) {\r\n    super();\r\n    this.sizedType = sizedType;\r\n    this.length = length;\r\n  }\r\n\r\n  resolve(context) {\r\n    let length = this.length;\r\n\r\n    if (length instanceof Reference) {\r\n      length = length.resolve(context);\r\n    }\r\n\r\n    return new this.sizedType(length);\r\n  }\r\n}\r\n\r\nclass Definition {\r\n  constructor(constructor, name, cfg) {\r\n    this.constructor = constructor;\r\n    this.name = name;\r\n    this.config = cfg;\r\n  }\r\n\r\n  // resolve calls the constructor of this definition with the provided context\r\n  // and this definitions config values.  The definitions constructor should\r\n  // populate the final type on `context.results`, and may refer to other\r\n  // definitions through `context.definitions`\r\n  resolve(context) {\r\n    if (this.name in context.results) {\r\n      return context.results[this.name];\r\n    }\r\n\r\n    return this.constructor(context, this.name, this.config);\r\n  }\r\n}\r\n\r\n// let the reference resolution system do its thing\r\n// the \"constructor\" for a typedef just returns the resolved value\r\nfunction createTypedef(context, typeName, value) {\r\n  if (value instanceof Reference) {\r\n    value = value.resolve(context);\r\n  }\r\n  context.results[typeName] = value;\r\n  return value;\r\n}\r\n\r\nfunction createConst(context, name, value) {\r\n  context.results[name] = value;\r\n  return value;\r\n}\r\n\r\nclass TypeBuilder {\r\n  constructor(destination) {\r\n    this._destination = destination;\r\n    this._definitions = {};\r\n  }\r\n\r\n  enum(name, members) {\r\n    const result = new Definition(XDRTypes.Enum.create, name, members);\r\n    this.define(name, result);\r\n  }\r\n\r\n  struct(name, members) {\r\n    const result = new Definition(XDRTypes.Struct.create, name, members);\r\n    this.define(name, result);\r\n  }\r\n\r\n  union(name, cfg) {\r\n    const result = new Definition(XDRTypes.Union.create, name, cfg);\r\n    this.define(name, result);\r\n  }\r\n\r\n  typedef(name, cfg) {\r\n    const result = new Definition(createTypedef, name, cfg);\r\n    this.define(name, result);\r\n  }\r\n\r\n  const(name, cfg) {\r\n    const result = new Definition(createConst, name, cfg);\r\n    this.define(name, result);\r\n  }\r\n\r\n  void() {\r\n    return XDRTypes.Void;\r\n  }\r\n\r\n  bool() {\r\n    return XDRTypes.Bool;\r\n  }\r\n\r\n  int() {\r\n    return XDRTypes.Int;\r\n  }\r\n\r\n  hyper() {\r\n    return XDRTypes.Hyper;\r\n  }\r\n\r\n  uint() {\r\n    return XDRTypes.UnsignedInt;\r\n  }\r\n\r\n  uhyper() {\r\n    return XDRTypes.UnsignedHyper;\r\n  }\r\n\r\n  float() {\r\n    return XDRTypes.Float;\r\n  }\r\n\r\n  double() {\r\n    return XDRTypes.Double;\r\n  }\r\n\r\n  quadruple() {\r\n    return XDRTypes.Quadruple;\r\n  }\r\n\r\n  string(length) {\r\n    return new SizedReference(XDRTypes.String, length);\r\n  }\r\n\r\n  opaque(length) {\r\n    return new SizedReference(XDRTypes.Opaque, length);\r\n  }\r\n\r\n  varOpaque(length) {\r\n    return new SizedReference(XDRTypes.VarOpaque, length);\r\n  }\r\n\r\n  array(childType, length) {\r\n    return new ArrayReference(childType, length);\r\n  }\r\n\r\n  varArray(childType, maxLength) {\r\n    return new ArrayReference(childType, maxLength, true);\r\n  }\r\n\r\n  option(childType) {\r\n    return new OptionReference(childType);\r\n  }\r\n\r\n  define(name, definition) {\r\n    if (this._destination[name] === undefined) {\r\n      this._definitions[name] = definition;\r\n    } else {\r\n      throw new XdrDefinitionError(`${name} is already defined`);\r\n    }\r\n  }\r\n\r\n  lookup(name) {\r\n    return new SimpleReference(name);\r\n  }\r\n\r\n  resolve() {\r\n    for (const defn of Object.values(this._definitions)) {\r\n      defn.resolve({\r\n        definitions: this._definitions,\r\n        results: this._destination\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function config(fn, types = {}) {\r\n  if (fn) {\r\n    const builder = new TypeBuilder(types);\r\n    fn(builder);\r\n    builder.resolve();\r\n  }\r\n\r\n  return types;\r\n}","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(899);\n"],"names":["root","factory","exports","module","define","amd","this","require","XdrWriterError","TypeError","constructor","message","super","XdrReaderError","XdrDefinitionError","XdrNotImplementedDefinitionError","XdrReader","source","Buffer","Array","from","_buffer","_length","length","_index","eof","advance","size","padding","i","rewind","read","subarray","readInt32BE","readUInt32BE","readBigInt64BE","readBigUInt64BE","readFloatBE","readDoubleBE","ensureInputConsumed","BUFFER_CHUNK","XdrWriter","buffer","allocUnsafe","alloc","resize","minRequiredSize","newLength","Math","ceil","newBuffer","copy","finalize","toArray","write","value","offset","fill","writeInt32BE","writeUInt32BE","writeBigInt64BE","writeBigUInt64BE","writeFloatBE","writeDoubleBE","static","XdrType","toXDR","format","arguments","undefined","writer","encodeResult","fromXDR","input","reader","decodeInput","result","validateXDR","e","XdrPrimitiveType","XdrCompositeType","isValid","InvalidXdrEncodingFormatError","toString","MAX_VALUE","MIN_VALUE","Int","Hyper","low","high","_value","BigInt","Number","unsigned","string","test","UnsignedInt","UnsignedHyper","Float","Double","Quadruple","Bool","intVal","String","maxLength","_maxLength","readString","byteLength","isBuffer","Opaque","VarOpaque","childType","_childType","global","child","VarArray","Option","isPresent","Void","Enum","name","res","_byValue","enumName","_members","Object","values","context","members","ChildEnum","results","key","entries","inst","Reference","resolve","Struct","attributes","_attributes","fieldName","type","_fields","structName","attribute","fields","ChildStruct","mappedFields","fieldDescriptor","field","prototype","createAccessorMethod","Union","aSwitch","set","_switchOn","fromName","_switch","arm","armForSwitch","_arm","_armType","_arms","get","armName","switch","armType","member","_switches","_defaultArm","unionName","config","ChildUnion","switchOn","Map","defaultArm","switches","arms","armsName","SimpleReference","definitions","ArrayReference","childReference","variable","resolvedChild","XDRTypes","OptionReference","SizedReference","sizedType","Definition","cfg","createTypedef","typeName","createConst","TypeBuilder","destination","_destination","_definitions","enum","struct","union","typedef","const","void","bool","int","hyper","uint","uhyper","float","double","quadruple","opaque","varOpaque","array","varArray","option","definition","lookup","defn","fn","types","builder","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","join","Uint8Array","code","Error","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","encoding","isEncoding","actual","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","checked","numberIsNaN","isArray","data","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","min","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","poolSize","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readBigInt64LE","readFloatLE","readDoubleLE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeBigUInt64LE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeBigInt64LE","writeFloatLE","writeDoubleLE","targetStart","copyWithin","errors","E","sym","getMessage","Base","writable","configurable","stack","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","o","g","globalThis","Function","window","prop","hasOwnProperty","r","toStringTag"],"sourceRoot":""}